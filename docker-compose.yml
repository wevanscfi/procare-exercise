version: '2'

volumes:
  db_data:

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - .:/opt/app
    depends_on:
      - postgres
      - kafka
    environment:
      RAILS_ENV: development
      DATABASE_HOST: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: localpw
      KAFKA_HOST: kafka

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - bundle
      - exec
      - karafka
      - server
    volumes:
      - .:/opt/app
    depends_on:
      - postgres
      - kafka
    environment:
      RAILS_ENV: development
      DATABASE_HOST: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: localpw
      KAFKA_HOST: kafka

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=localpw
      - POSTGRES_USER=postgres

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.1

    ports:
      - 9092:9092

    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
